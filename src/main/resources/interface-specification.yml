openapi: 3.0.3
info:
  title: tenant Process Micro Service
  description: Offers operations to retrieve tenant data
  version: '{{version}}'
  contact:
    name: API Support
    url: 'http://www.example.com/support'
    email: support@example.com
  termsOfService: 'http://swagger.io/terms/'
  x-api-id: an x-api-id
  x-summary: an x-summary
servers:
  - url: '/tenant-process/{{version}}'
    description: This service is the tenant process
security:
  - bearerAuth: []
tags:
  - name: tenant
    description: Implements tenant process
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
  - name: health
    description: Verify service status
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
paths:
  /internal/tenants:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - $ref: '#/components/parameters/IpAddress'
    post:
      tags:
        - tenant
      operationId: internalUpsertTenant
      description: |
        Creates the Tenant if it does not exist. Otherwise, add missing attributes.
        Used when the attribute origin is known
      responses:
        '200':
          description: Tenant created or updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InternalTenantSeed'
        required: true
  /internal/origin/{tOrigin}/externalId/{tExternalId}/attributes/origin/{aOrigin}/externalId/{aExternalId}:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - $ref: '#/components/parameters/IpAddress'
      - name: tOrigin
        in: path
        description: the origin of the tenant
        required: true
        schema:
          type: string
      - name: tExternalId
        in: path
        description: the externalId of the tenant
        required: true
        schema:
          type: string
      - name: aOrigin
        in: path
        description: the origin of the attribute
        required: true
        schema:
          type: string
      - name: aExternalId
        in: path
        description: the externalId of the attribute
        required: true
        schema:
          type: string
    delete:
      tags:
        - tenant
      operationId: internalRevokeCertifiedAttribute
      description: Revokes a Certified attribute to the requesting Tenant
      responses:
        '204':
          description: Updated Tenant
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Tenant Attribute Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /m2m/tenants:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - $ref: '#/components/parameters/IpAddress'
    post:
      tags:
        - tenant
      operationId: m2mUpsertTenant
      description: |
        Creates the Tenant if it does not exist. Otherwise, add missing attributes.
        Used when the attribute origin should be deducted from requester
      responses:
        '200':
          description: Tenant created or updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/M2MTenantSeed'
        required: true
  /m2m/origin/{origin}/externalId/{externalId}/attributes/{code}:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - $ref: '#/components/parameters/IpAddress'
      - name: origin
        in: path
        description: the origin of the tenant
        required: true
        schema:
          type: string
      - name: externalId
        in: path
        description: the externalId of the tenant
        required: true
        schema:
          type: string
      - name: code
        in: path
        description: the code of the attribute
        required: true
        schema:
          type: string
    delete:
      tags:
        - tenant
      operationId: m2mRevokeAttribute
      description: Revokes the specific attribute from the tenant
      responses:
        '204':
          description: Attribute revoked
        '400':
          description: BadRequest
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /selfcare/tenants:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - $ref: '#/components/parameters/IpAddress'
    post:
      tags:
        - tenant
      operationId: selfcareUpsertTenant
      description: |
        Creates the Tenant if it does not exist. Otherwise, set Tenant SelfcareId.
        Used when the request source is SelfCare
      responses:
        '200':
          description: Tenant created or updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
        '409':
          description: Selfcare Id is already assigned and is different from the request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SelfcareTenantSeed'
        required: true
  /consumers:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - $ref: '#/components/parameters/IpAddress'
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: offset
        required: true
        schema:
          type: integer
          format: int32
          minimum: 0
      - in: query
        name: limit
        required: true
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 50
    get:
      tags:
        - tenant
      operationId: getConsumers
      description: Retrieve Tenants that are subscribed to at least one EService
      responses:
        '200':
          description: Tenants retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenants'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /producers:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - $ref: '#/components/parameters/IpAddress'
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: offset
        required: true
        schema:
          type: integer
          format: int32
          minimum: 0
      - in: query
        name: limit
        required: true
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 50
    get:
      tags:
        - tenant
      operationId: getProducers
      description: Retrieve Tenants that have published an EService
      responses:
        '200':
          description: Tenants retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenants'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /tenants:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - $ref: '#/components/parameters/IpAddress'
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: offset
        required: true
        schema:
          type: integer
          format: int32
          minimum: 0
      - in: query
        name: limit
        required: true
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 50
    get:
      tags:
        - tenant
      operationId: getTenants
      description: Retrieve Tenants by name
      responses:
        '200':
          description: Tenants retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenants'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /tenants/selfcare/{selfcareId}:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - $ref: '#/components/parameters/IpAddress'
      - name: selfcareId
        in: path
        description: the selfcare id
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - tenant
      operationId: getTenantBySelfcareId
      description: Retrieve the Tenant
      responses:
        '200':
          description: Tenant retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
        '404':
          description: Tenant Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /tenants/{id}:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - $ref: '#/components/parameters/IpAddress'
      - name: id
        in: path
        description: the tenant id
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - tenant
      operationId: getTenant
      description: Retrieve the Tenant
      responses:
        '200':
          description: Tenant retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
        '404':
          description: Tenant Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
    post:
      tags:
        - tenant
      operationId: updateTenant
      description: Updates the tenant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantDelta'
      responses:
        '200':
          description: Tenant updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
        '404':
          description: Tenant Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /tenants/origin/{origin}/code/{code}:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - $ref: '#/components/parameters/IpAddress'
      - name: origin
        in: path
        description: the tenant origin
        required: true
        schema:
          type: string
      - name: code
        in: path
        description: the tenant code
        required: true
        schema:
          type: string
    get:
      tags:
        - tenant
      operationId: getTenantByExternalId
      description: Retrieve the Tenant
      responses:
        '200':
          description: Tenant retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
        '404':
          description: Tenant Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /tenants/attributes/declared:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - $ref: '#/components/parameters/IpAddress'
    post:
      tags:
        - tenant
      operationId: addDeclaredAttribute
      description: Adds a Declared attribute to the requesting Tenant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeclaredTenantAttributeSeed'
        required: true
      responses:
        '200':
          description: Updated Tenant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
        '409':
          description: Attribute already assigned to Tenant
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /tenants/attributes/declared/{attributeId}:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - $ref: '#/components/parameters/IpAddress'
      - name: attributeId
        in: path
        description: Attribute id
        required: true
        schema:
          type: string
          format: uuid
    delete:
      tags:
        - tenant
      operationId: revokeDeclaredAttribute
      description: Revokes a Declared attribute to the requesting Tenant
      responses:
        '200':
          description: Updated Tenant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Tenant Attribute Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /tenants/{tenantId}/attributes/certified:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - $ref: '#/components/parameters/IpAddress'
      - name: tenantId
        in: path
        description: Tenant id which certified attribute has to be associated
        required: true
        schema:
          type: string
          format: uuid
    post:
      tags:
        - tenant
      operationId: assignCertifiedAttribute
      description: Add a certified attribute to a Tenant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertifiedTenantAttributeSeed'
        required: true
      responses:
        '200':
          description: Assign certified attribute to Tenant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Tenant Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'

  /tenants/{tenantId}/attributes/verified:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - $ref: '#/components/parameters/IpAddress'
      - name: tenantId
        in: path
        description: Tenant id which attribute needs to be verified
        required: true
        schema:
          type: string
          format: uuid
    post:
      tags:
        - tenant
      operationId: verifyVerifiedAttribute
      description: Verify or de-revoke a Verified attribute to a Tenant by the requester Tenant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifiedTenantAttributeSeed'
        required: true
      responses:
        '200':
          description: Updated Tenant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Tenant Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /tenants/{tenantId}/attributes/verified/{attributeId}:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - $ref: '#/components/parameters/IpAddress'
      - name: tenantId
        in: path
        description: Tenant id which attribute needs to be verified
        required: true
        schema:
          type: string
          format: uuid
      - name: attributeId
        in: path
        description: Attribute id to be revoked
        required: true
        schema:
          type: string
          format: uuid
    delete:
      tags:
        - tenant
      operationId: revokeVerifiedAttribute
      description: Revoke a Verified attribute to a Tenant by the requester Tenant
      responses:
        '200':
          description: Updated Tenant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Tenant Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '409':
          description: Attribute already revoked for the Tenant
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
    post:
      tags:
        - tenant
      operationId: updateVerifiedAttribute
      description: Update expirationDate for Verified Attribute of Tenant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVerifiedTenantAttributeSeed'
        required: true
      responses:
        '200':
          description: Updated Tenant Attribute
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Tenant Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /tenants/{tenantId}/attributes/verified/{attributeId}/verifier/{verifierId}:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - $ref: '#/components/parameters/IpAddress'
      - name: tenantId
        in: path
        description: Tenant id which attribute needs to be verified
        required: true
        schema:
          type: string
          format: uuid
      - name: attributeId
        in: path
        description: Attribute id to be updated
        required: true
        schema:
          type: string
          format: uuid
      - name: verifierId
        in: path
        description: verifier id to be updated
        required: true
        schema:
          type: string
          format: uuid
    post:
      tags:
        - tenant
      operationId: updateVerifiedAttributeExtensionDate
      description: Update attribute extensionDate to a Tenant by the requester Tenant
      responses:
        '200':
          description: Updated Tenant Attribute
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /status:
    get:
      security: []
      tags:
        - health
      summary: Health status endpoint
      description: Return ok
      operationId: getStatus
      responses:
        '200':
          description: successful operation
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
components:
  parameters:
    CorrelationIdHeader:
      in: header
      name: X-Correlation-Id
      required: true
      schema:
        type: string
    IpAddress:
      in: header
      name: X-Forwarded-For
      schema:
        type: string
  schemas:
    ExternalId:
      properties:
        origin:
          type: string
          minLength: 3
          maxLength: 64
        value:
          type: string
      required:
        - origin
        - value
    InternalAttributeSeed:
      type: object
      properties:
        origin:
          type: string
          minLength: 3
          maxLength: 64
        code:
          type: string
          minLength: 1
          maxLength: 64
      required:
        - origin
        - code
    M2MAttributeSeed:
      type: object
      properties:
        code:
          type: string
          minLength: 1
          maxLength: 64
      required:
        - code
    Tenant:
      description: Tenant model
      type: object
      properties:
        id:
          type: string
          format: uuid
        selfcareId:
          type: string
        externalId:
          $ref: '#/components/schemas/ExternalId'
        features:
          type: array
          items:
            $ref: '#/components/schemas/TenantFeature'
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/TenantAttribute'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        mails:
          type: array
          items:
            $ref: '#/components/schemas/Mail'
        name:
          type: string
        kind:
          $ref: '#/components/schemas/TenantKind'  
      required:
        - id
        - certifier
        - externalId
        - features
        - attributes
        - createdAt
        - mails
        - name
    TenantKind:
      type: string
      enum:
        - PA
        - PRIVATE
        - GSP
    Tenants:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Tenant'
        totalCount:
          type: integer
          format: int32
      required:
        - results
        - totalCount
    TenantFeature:
      type: object
      properties:
        certifier:
          $ref: '#/components/schemas/Certifier'
    Certifier:
      description: Certifier Tenant Feature
      type: object
      properties:
        certifierId:
          type: string
      required:
        - certifierId
    TenantAttribute:
      type: object
      properties:
        declared:
          $ref: '#/components/schemas/DeclaredTenantAttribute'
        certified:
          $ref: '#/components/schemas/CertifiedTenantAttribute'
        verified:
          $ref: '#/components/schemas/VerifiedTenantAttribute'
    DeclaredTenantAttribute:
      type: object
      properties:
        id:
          type: string
          format: uuid
        assignmentTimestamp:
          type: string
          format: date-time
        revocationTimestamp:
          type: string
          format: date-time
      required:
        - id
        - kind
        - assignmentTimestamp
    CertifiedTenantAttribute:
      type: object
      properties:
        id:
          type: string
          format: uuid
        assignmentTimestamp:
          type: string
          format: date-time
        revocationTimestamp:
          type: string
          format: date-time
      required:
        - id
        - kind
        - assignmentTimestamp
    VerifiedTenantAttribute:
      type: object
      properties:
        id:
          type: string
          format: uuid
        assignmentTimestamp:
          type: string
          format: date-time
        verifiedBy:
          type: array
          items:
            $ref: '#/components/schemas/TenantVerifier'
        revokedBy:
          type: array
          items:
            $ref: '#/components/schemas/TenantRevoker'
      required:
        - id
        - kind
        - assignmentTimestamp
        - verifiedBy
        - revokedBy
    DeclaredTenantAttributeSeed:
      type: object
      properties:
        id:
          type: string
          format: uuid
      required:
        - id
    CertifiedTenantAttributeSeed:
      type: object
      properties:
        attributeId:
          type: string
          format: uuid
      required:
        - attributeId    
    VerifiedTenantAttributeSeed:
      type: object
      properties:
        id:
          type: string
          format: uuid
        expirationDate:
          type: string
          format: date-time
      required:
        - id
    UpdateVerifiedTenantAttributeSeed:
      type: object
      properties:
        expirationDate:
          type: string
          format: date-time
    TenantVerifier:
      type: object
      properties:
        id:
          type: string
          format: uuid
        verificationDate:
          type: string
          format: date-time
        expirationDate:
          type: string
          format: date-time
        extensionDate:
          type: string
          format: date-time
      required:
        - id
        - verificationDate
    TenantRevoker:
      type: object
      properties:
        id:
          type: string
          format: uuid
        verificationDate:
          type: string
          format: date-time
        expirationDate:
          type: string
          format: date-time
        extensionDate:
          type: string
          format: date-time
        revocationDate:
          type: string
          format: date-time
      required:
        - id
        - verificationDate
        - revocationDate
    InternalTenantSeed:
      description: Tenant Seed model
      type: object
      properties:
        externalId:
          $ref: '#/components/schemas/ExternalId'
        certifiedAttributes:
          type: array
          items:
            $ref: '#/components/schemas/InternalAttributeSeed'
        name:
          type: string
          minLength: 1
          maxLength: 500
      required:
        - externalId
        - certifiedAttributes
        - name
    M2MTenantSeed:
      description: Tenant Seed model
      type: object
      properties:
        externalId:
          $ref: '#/components/schemas/ExternalId'
        certifiedAttributes:
          type: array
          items:
            $ref: '#/components/schemas/M2MAttributeSeed'
        name:
          type: string
          minLength: 1
          maxLength: 500
      required:
        - externalId
        - certifiedAttributes
        - name
    SelfcareTenantSeed:
      description: Tenant Seed model
      type: object
      properties:
        externalId:
          $ref: '#/components/schemas/ExternalId'
        selfcareId:
          type: string
        name:
          type: string
          minLength: 1
          maxLength: 500
      required:
        - externalId
        - selfcareId
        - name
    TenantDelta:
      description: Tenant Delta model
      type: object
      properties:
        mails:
          type: array
          items:
            $ref: '#/components/schemas/MailSeed'
      required:
        - mails
    MailSeed:
      description: A specific kind of mail
      type: object
      properties:
        kind:
          $ref: '#/components/schemas/MailKind'
        address:
          type: string
          minLength: 5
          maxLength: 320
        description:
          type: string
          minLength: 10
          maxLength: 250
      required:
        - kind
        - address
    Mail:
      description: A specific kind of mail
      type: object
      properties:
        kind:
          $ref: '#/components/schemas/MailKind'
        address:
          type: string
          maxLength: 30
        createdAt:
          type: string
          format: date-time
        description:
          type: string
          maxLength: 250
      required:
        - kind
        - address
        - createdAt
    MailKind:
      type: string
      enum:
        - CONTACT_EMAIL
    Problem:
      properties:
        type:
          description: URI reference of type definition
          type: string
        status:
          description: The HTTP status code generated by the origin server for this occurrence of the problem.
          example: 503
          exclusiveMaximum: true
          format: int32
          maximum: 600
          minimum: 100
          type: integer
        title:
          description: A short, summary of the problem type. Written in english and readable
          example: Service Unavailable
          maxLength: 64
          pattern: '^[ -~]{0,64}$'
          type: string
        correlationId:
          description: Unique identifier of the request
          example: '53af4f2d-0c87-41ef-a645-b726a821852b'
          maxLength: 64
          type: string
        detail:
          description: A human readable explanation of the problem.
          example: Request took too long to complete.
          maxLength: 4096
          pattern: '^.{0,1024}$'
          type: string
        errors:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/ProblemError'
      additionalProperties: false
      required:
        - type
        - status
        - title
        - errors
    ProblemError:
      properties:
        code:
          description: Internal code of the error
          example: 123-4567
          minLength: 8
          maxLength: 8
          pattern: '^[0-9]{3}-[0-9]{4}$'
          type: string
        detail:
          description: A human readable explanation specific to this occurrence of the problem.
          example: Parameter not valid
          maxLength: 4096
          pattern: '^.{0,1024}$'
          type: string
      required:
        - code
        - detail
  securitySchemes:
    bearerAuth:
      type: http
      description: 'A bearer token in the format of a JWS and conformed to the specifications included in [RFC8725](https://tools.ietf.org/html/RFC8725).'
      scheme: bearer
      bearerFormat: JWT
